name: Deploy by ssh

env:
  SSH_USERNAME: "ubuntu"
  SSH_HOST_NAME: "3.79.44.50"
  #SSH_PORT: "22"

on:
  push:
    branches:
      - release

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Change directory permitions
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST_NAME }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            bash
            if [ -d /home/${{ env.SSH_USERNAME }}/Crystall/ ]; then
              sudo chmod -R 777 /home/${{ env.SSH_USERNAME }}/Crystall/ && echo "chmod done"
              sudo chown -R ${{ env.SSH_USERNAME }}:${{ env.SSH_USERNAME }} /home/${{ env.SSH_USERNAME }}/Crystall/ && echo "chown done"
            else
              echo "/home/${{ env.SSH_USERNAME }}/Crystall/ not found"
            fi
       
            
      - name: Refresh content
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
      - name: Sync Repository via SSH
        run: |
          rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }}" --archive --compress --delete \
          . ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST_NAME }}:Crystall

      - name: Change directory permitions again
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST_NAME }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            if [ -d /home/${{ env.SSH_USERNAME }}/Crystall/ ]; then
              sudo chmod -R 755 /home/${{ env.SSH_USERNAME }}/Crystall/
              sudo chown -R ${{ env.SSH_USERNAME }}:${{ env.SSH_USERNAME }} /home/${{ env.SSH_USERNAME }}/Crystall/
            else
              echo "/home/${{ env.SSH_USERNAME }}/Crystall/ not found"
            fi

      - name: Check docker and docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST_NAME }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            if /home/${{ secrets.SSH_USERNAME }}/Crystall/devops/check_docker.sh; then
              echo "Docker is already installed"
            else
              /home/${{ secrets.SSH_USERNAME }}/Crystall/devops/install_docker_docker-compose.sh && echo "Docker installed" || echo "Failed to install Docker"
            fi
          # run: |
          #    /home/${{ env.SSH_USERNAME }}/Crystall/devops/check_docker.sh || \
          #    /home/${{ env.SSH_USERNAME }}/Crystall/devops/install_docker_docker-compose.sh ||
          #     echo "Did not check Docker"

      - name: Stop docker conteiners and clean docker images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST_NAME }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo docker stop $(docker ps -aq) && \
            sudo docker system prune --all --force \
            || echo "No docker conteiners are running"

      - name: Start docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST_NAME }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo docker compose -f /home/${{ env.SSH_USERNAME }}/Crystall/docker-compose.prod.yml up -d
